{"ast":null,"code":"var _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/WorkExperienceItem/WorkExperienceItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport TimelineItem from '../TimelineItem';\nimport styles from './WorkExperienceItem.module.scss';\nimport ExpandWithAnimation from '../ExpandWithAnimation';\nconst {\n  contentHeader,\n  title: titleStyle,\n  company: companyStyle,\n  descriptionTrigger,\n  arrow,\n  arrowOpen,\n  descriptionList: descriptionListStyle,\n  description: descriptionStyle\n} = styles;\n\nconst WorkExperienceItem = ({\n  item\n}) => {\n  const {\n    0: showDescription,\n    1: setShowDescription\n  } = useState(false);\n  const {\n    year,\n    title,\n    company,\n    descriptionList\n  } = item;\n  return __jsx(TimelineItem, {\n    year: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: contentHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: titleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: companyStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, company), descriptionList && __jsx(\"div\", {\n    role: \"button\",\n    className: descriptionTrigger,\n    onClick: () => setShowDescription(!showDescription),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, `${showDescription ? 'Hide' : 'See'} description`, __jsx(\"span\", {\n    className: classNames(arrow, {\n      [arrowOpen]: showDescription\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))), descriptionList && __jsx(ExpandWithAnimation, {\n    isCollapsed: !showDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"ul\", {\n    className: descriptionListStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, descriptionList.map(description => __jsx(\"li\", {\n    className: descriptionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, description))))));\n};\n\nexport default WorkExperienceItem;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/WorkExperienceItem/WorkExperienceItem.tsx"],"names":["React","useState","classNames","TimelineItem","styles","ExpandWithAnimation","contentHeader","title","titleStyle","company","companyStyle","descriptionTrigger","arrow","arrowOpen","descriptionList","descriptionListStyle","description","descriptionStyle","WorkExperienceItem","item","showDescription","setShowDescription","year","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,MAAM;AACJC,EAAAA,aADI;AAEJC,EAAAA,KAAK,EAAEC,UAFH;AAGJC,EAAAA,OAAO,EAAEC,YAHL;AAIJC,EAAAA,kBAJI;AAKJC,EAAAA,KALI;AAMJC,EAAAA,SANI;AAOJC,EAAAA,eAAe,EAAEC,oBAPb;AAQJC,EAAAA,WAAW,EAAEC;AART,IASFb,MATJ;;AAcA,MAAMc,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwC;AACjE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCpB,QAAQ,CAAU,KAAV,CAAtD;AACA,QAAM;AAAEqB,IAAAA,IAAF;AAAQf,IAAAA,KAAR;AAAeE,IAAAA,OAAf;AAAwBK,IAAAA;AAAxB,MAA4CK,IAAlD;AAEA,SACE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAK,IAAA,SAAS,EAAEhB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,KAA7B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,OAA/B,CAFF,EAGGK,eAAe,IACd;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEH,kBAFb;AAGE,IAAA,OAAO,EAAE,MAAMU,kBAAkB,CAAC,CAACD,eAAF,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,GAAEA,eAAe,GAAG,MAAH,GAAY,KAAM,cALvC,EAME;AACE,IAAA,SAAS,EAAElB,UAAU,CAACU,KAAD,EAAQ;AAAE,OAACC,SAAD,GAAaO;AAAf,KAAR,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJJ,CADF,EAiBGN,eAAe,IACd,MAAC,mBAAD;AAAqB,IAAA,WAAW,EAAE,CAACM,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEL,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eAAe,CAACS,GAAhB,CAAqBP,WAAD,IACnB;AAAI,IAAA,SAAS,EAAEC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,WAAlC,CADD,CADH,CADF,CAlBJ,CADF,CADF;AA+BD,CAnCD;;AAqCA,eAAeE,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport IWorkExperienceItem from '../../typescript/Interfaces/IWorkExperienceItem';\nimport TimelineItem from '../TimelineItem';\nimport styles from './WorkExperienceItem.module.scss';\nimport ExpandWithAnimation from '../ExpandWithAnimation';\n\nconst {\n  contentHeader,\n  title: titleStyle,\n  company: companyStyle,\n  descriptionTrigger,\n  arrow,\n  arrowOpen,\n  descriptionList: descriptionListStyle,\n  description: descriptionStyle,\n} = styles;\ninterface IWorkExperienceItemProps {\n  item: IWorkExperienceItem;\n}\n\nconst WorkExperienceItem = ({ item }: IWorkExperienceItemProps) => {\n  const [showDescription, setShowDescription] = useState<boolean>(false);\n  const { year, title, company, descriptionList } = item;\n\n  return (\n    <TimelineItem year={year}>\n      <>\n        <div className={contentHeader}>\n          <div className={titleStyle}>{title}</div>\n          <div className={companyStyle}>{company}</div>\n          {descriptionList && (\n            <div\n              role=\"button\"\n              className={descriptionTrigger}\n              onClick={() => setShowDescription(!showDescription)}\n            >\n              {`${showDescription ? 'Hide' : 'See'} description`}\n              <span\n                className={classNames(arrow, { [arrowOpen]: showDescription })}\n              />\n            </div>\n          )}\n        </div>\n        {descriptionList && (\n          <ExpandWithAnimation isCollapsed={!showDescription}>\n            <ul className={descriptionListStyle}>\n              {descriptionList.map((description: string) => (\n                <li className={descriptionStyle}>{description}</li>\n              ))}\n            </ul>\n          </ExpandWithAnimation>\n        )}\n      </>\n    </TimelineItem>\n  );\n};\n\nexport default WorkExperienceItem;\n"]},"metadata":{},"sourceType":"module"}