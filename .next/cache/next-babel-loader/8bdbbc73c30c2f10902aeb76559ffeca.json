{"ast":null,"code":"var _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/TimelineItem/TimelineItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './TimelineItem.module.scss';\nconst {\n  container,\n  rightSide,\n  content,\n  year: yearStyle,\n  dividor,\n  animate: animateStyle\n} = styles;\n\nconst TimelineItem = ({\n  year,\n  children\n}) => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(false);\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    }\n  }, [isInViewport]);\n  console.log('animate', animate);\n  return __jsx(\"div\", {\n    className: container,\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: yearStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, year), __jsx(\"div\", {\n    className: classNames(dividor, {\n      [animateStyle]: animate\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: rightSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default TimelineItem;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/TimelineItem/TimelineItem.tsx"],"names":["React","useEffect","useState","classNames","useIsInViewport","styles","container","rightSide","content","year","yearStyle","dividor","animate","animateStyle","TimelineItem","children","isInViewport","targetRef","setAnimate","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,MAAM;AACJC,EAAAA,SADI;AAEJC,EAAAA,SAFI;AAGJC,EAAAA,OAHI;AAIJC,EAAAA,IAAI,EAAEC,SAJF;AAKJC,EAAAA,OALI;AAMJC,EAAAA,OAAO,EAAEC;AANL,IAOFR,MAPJ;;AAaA,MAAMS,YAAY,GAAG,CAAC;AAAEL,EAAAA,IAAF;AAAQM,EAAAA;AAAR,CAAD,KAA4C;AAC/D,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4Bb,eAAe,EAAjD;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUM;AAAV,MAAwBhB,QAAQ,CAAU,KAAV,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAJ,EAAkB;AAChBE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACF,YAAD,CAJM,CAAT;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEN,SAAhB;AAA2B,IAAA,GAAG,EAAEW,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BD,IAA5B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACQ,OAAD,EAAU;AAAE,OAACE,YAAD,GAAgBD;AAAlB,KAAV,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAEL,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BO,QAA1B,CADF,CAHF,CADF;AASD,CArBD;;AAuBA,eAAeD,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './TimelineItem.module.scss';\n\nconst {\n  container,\n  rightSide,\n  content,\n  year: yearStyle,\n  dividor,\n  animate: animateStyle,\n} = styles;\ninterface ITimelineItemProps {\n  children: React.ReactNode;\n  year: string;\n}\n\nconst TimelineItem = ({ year, children }: ITimelineItemProps) => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const [animate, setAnimate] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    }\n  }, [isInViewport]);\n\n  console.log('animate', animate);\n\n  return (\n    <div className={container} ref={targetRef}>\n      <div className={yearStyle}>{year}</div>\n      <div className={classNames(dividor, { [animateStyle]: animate })} />\n      <div className={rightSide}>\n        <div className={content}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineItem;\n"]},"metadata":{},"sourceType":"module"}