{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/TimelineItem/TimelineItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './TimelineItem.module.scss';\nvar container = styles.container,\n    rightSide = styles.rightSide,\n    content = styles.content,\n    yearStyle = styles.year,\n    dividor = styles.dividor,\n    animateUp = styles.animateUp;\n\nvar TimelineItem = function TimelineItem(_ref) {\n  var year = _ref.year,\n      children = _ref.children;\n\n  var _useIsInViewport = useIsInViewport(),\n      _useIsInViewport2 = _slicedToArray(_useIsInViewport, 2),\n      isInViewport = _useIsInViewport2[0],\n      targetRef = _useIsInViewport2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      animateUp = _useState2[0],\n      setAnimateUp = _useState2[1];\n\n  useEffect(function () {\n    if (isInViewport) {\n      setAnimateUp(true);\n    }\n  }, [isInViewport]);\n  return __jsx(\"div\", {\n    className: container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: yearStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, year), __jsx(\"div\", {\n    className: classNames(dividor, _defineProperty({}, animateUp, animateUp)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: rightSide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default TimelineItem;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/TimelineItem/TimelineItem.tsx"],"names":["React","useEffect","classNames","useIsInViewport","styles","container","rightSide","content","yearStyle","year","dividor","animateUp","TimelineItem","children","isInViewport","targetRef","useState","setAnimateUp"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;IAGEC,S,GAMED,M,CANFC,S;IACAC,S,GAKEF,M,CALFE,S;IACAC,O,GAIEH,M,CAJFG,O;IACMC,S,GAGJJ,M,CAHFK,I;IACAC,O,GAEEN,M,CAFFM,O;IACAC,S,GACEP,M,CADFO,S;;AAOF,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA4C;AAAA,MAAzCH,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCI,QAAmC,QAAnCA,QAAmC;;AAAA,yBAC7BV,eAAe,EADc;AAAA;AAAA,MACxDW,YADwD;AAAA,MAC1CC,SAD0C;;AAAA,kBAE7BC,QAAQ,CAAU,KAAV,CAFqB;AAAA;AAAA,MAExDL,SAFwD;AAAA,MAE7CM,YAF6C;;AAI/DhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,YAAJ,EAAkB;AAChBG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACH,YAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAET,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEG,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,IAA5B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEP,UAAU,CAACQ,OAAD,sBAAaC,SAAb,EAAyBA,SAAzB,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAEL,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BM,QAA1B,CADF,CAHF,CADF;AASD,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './TimelineItem.module.scss';\n\nconst {\n  container,\n  rightSide,\n  content,\n  year: yearStyle,\n  dividor,\n  animateUp,\n} = styles;\ninterface ITimelineItemProps {\n  children: React.ReactNode;\n  year: string;\n}\n\nconst TimelineItem = ({ year, children }: ITimelineItemProps) => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const [animateUp, setAnimateUp] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimateUp(true);\n    }\n  }, [isInViewport]);\n\n  return (\n    <div className={container}>\n      <div className={yearStyle}>{year}</div>\n      <div className={classNames(dividor, { [animateUp]: animateUp })} />\n      <div className={rightSide}>\n        <div className={content}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineItem;\n"]},"metadata":{},"sourceType":"module"}