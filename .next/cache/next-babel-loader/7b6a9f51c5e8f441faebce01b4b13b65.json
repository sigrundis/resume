{"ast":null,"code":"var _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/Skills/Skills.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport useIsInViewport from 'use-is-in-viewport';\nimport classNames from 'classnames';\nimport { programmingLanguages, frameworks } from '../../data/computerSkills';\nimport Section from '../Section';\nimport ProgressBar from '../ProgressBar';\nimport Headline from '../Headline';\nimport styles from './Skills.module.scss';\nconst {\n  subtitle: subtitleStyle,\n  h3,\n  flexWrapper,\n  progressBars,\n  bullet,\n  advancedBullet,\n  intermediateBullet,\n  fundamentalBullet\n} = styles;\n\nconst Skills = () => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(false);\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    } else {\n      setAnimate(false);\n    }\n  }, [isInViewport]);\n\n  const subtitle = __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: subtitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classNames(bullet, advancedBullet),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Advanced\")), __jsx(\"div\", {\n    className: subtitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classNames(bullet, intermediateBullet),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Intermetiate\")), __jsx(\"div\", {\n    className: subtitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classNames(bullet, fundamentalBullet),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Fundamental\")));\n\n  return __jsx(React.Fragment, null, __jsx(Headline, {\n    headline: \"Computer Skills\",\n    subtitle: subtitle,\n    noPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(Section, {\n    ref: targetRef,\n    tall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: flexWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: progressBars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Programming Languages\"), programmingLanguages.map(({\n    title,\n    percentage\n  }, idx) => __jsx(ProgressBar, {\n    title: title,\n    width: percentage,\n    advanced: percentage > 75,\n    intermediate: percentage <= 75 && percentage > 60,\n    fundamental: percentage <= 60,\n    animate: animate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    className: progressBars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Frameworks / Software\"), frameworks.map(({\n    title,\n    percentage\n  }, idx) => __jsx(ProgressBar, {\n    title: title,\n    width: percentage,\n    advanced: percentage > 75,\n    intermediate: percentage <= 75 && percentage > 60,\n    fundamental: percentage <= 60,\n    animate: animate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/Skills/Skills.tsx"],"names":["React","useEffect","useState","useIsInViewport","classNames","programmingLanguages","frameworks","Section","ProgressBar","Headline","styles","subtitle","subtitleStyle","h3","flexWrapper","progressBars","bullet","advancedBullet","intermediateBullet","fundamentalBullet","Skills","isInViewport","targetRef","animate","setAnimate","map","title","percentage","idx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,2BAAjD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,MAAM;AACJC,EAAAA,QAAQ,EAAEC,aADN;AAEJC,EAAAA,EAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA,YAJI;AAKJC,EAAAA,MALI;AAMJC,EAAAA,cANI;AAOJC,EAAAA,kBAPI;AAQJC,EAAAA;AARI,IASFT,MATJ;;AAWA,MAAMU,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4BnB,eAAe,EAAjD;AACA,QAAM;AAAA,OAACoB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAU,KAAV,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,YAAJ,EAAkB;AAChBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GANQ,EAMN,CAACH,YAAD,CANM,CAAT;;AAQA,QAAMV,QAAQ,GACZ,4BACE;AAAK,IAAA,SAAS,EAAEC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAER,UAAU,CAACY,MAAD,EAASC,cAAT,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAEL,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAER,UAAU,CAACY,MAAD,EAASE,kBAAT,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CALF,EASE;AAAK,IAAA,SAAS,EAAEN,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAER,UAAU,CAACY,MAAD,EAASG,iBAAT,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CATF,CADF;;AAiBA,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,iBAAnB;AAAqC,IAAA,QAAQ,EAAER,QAA/C;AAAyD,IAAA,SAAS,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEW,SAAd;AAAyB,IAAA,IAAI,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAER,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGR,oBAAoB,CAACoB,GAArB,CACC,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAwCC,GAAxC,KACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,KAAK,EAAEC,UAFT;AAGE,IAAA,QAAQ,EAAEA,UAAU,GAAG,EAHzB;AAIE,IAAA,YAAY,EAAEA,UAAU,IAAI,EAAd,IAAoBA,UAAU,GAAG,EAJjD;AAKE,IAAA,WAAW,EAAEA,UAAU,IAAI,EAL7B;AAME,IAAA,OAAO,EAAEJ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAFH,CADF,EAgBE;AAAK,IAAA,SAAS,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGP,UAAU,CAACmB,GAAX,CACC,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAwCC,GAAxC,KACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,KAAK,EAAEC,UAFT;AAGE,IAAA,QAAQ,EAAEA,UAAU,GAAG,EAHzB;AAIE,IAAA,YAAY,EAAEA,UAAU,IAAI,EAAd,IAAoBA,UAAU,GAAG,EAJjD;AAKE,IAAA,WAAW,EAAEA,UAAU,IAAI,EAL7B;AAME,IAAA,OAAO,EAAEJ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAFH,CAhBF,CADF,CAFF,CADF;AAuCD,CApED;;AAsEA,eAAeH,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useIsInViewport from 'use-is-in-viewport';\nimport classNames from 'classnames';\nimport { programmingLanguages, frameworks } from '../../data/computerSkills';\nimport Section from '../Section';\nimport ProgressBar from '../ProgressBar';\nimport Headline from '../Headline';\nimport styles from './Skills.module.scss';\nimport IComputerSkill from '../../typescript/Interfaces/IComputerSkill';\n\nconst {\n  subtitle: subtitleStyle,\n  h3,\n  flexWrapper,\n  progressBars,\n  bullet,\n  advancedBullet,\n  intermediateBullet,\n  fundamentalBullet,\n} = styles;\n\nconst Skills = () => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const [animate, setAnimate] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    } else {\n      setAnimate(false);\n    }\n  }, [isInViewport]);\n\n  const subtitle = (\n    <>\n      <div className={subtitleStyle}>\n        <div className={classNames(bullet, advancedBullet)} />\n        <span>Advanced</span>\n      </div>\n      <div className={subtitleStyle}>\n        <div className={classNames(bullet, intermediateBullet)} />\n        <span>Intermetiate</span>\n      </div>\n      <div className={subtitleStyle}>\n        <div className={classNames(bullet, fundamentalBullet)} />\n        <span>Fundamental</span>\n      </div>\n    </>\n  );\n\n  return (\n    <>\n      <Headline headline=\"Computer Skills\" subtitle={subtitle} noPadding />\n      <Section ref={targetRef} tall>\n        <div className={flexWrapper}>\n          <div className={progressBars}>\n            <h3 className={h3}>Programming Languages</h3>\n            {programmingLanguages.map(\n              ({ title, percentage }: IComputerSkill, idx: number) => (\n                <ProgressBar\n                  title={title}\n                  width={percentage}\n                  advanced={percentage > 75}\n                  intermediate={percentage <= 75 && percentage > 60}\n                  fundamental={percentage <= 60}\n                  animate={animate}\n                />\n              )\n            )}\n          </div>\n          <div className={progressBars}>\n            <h3 className={h3}>Frameworks / Software</h3>\n            {frameworks.map(\n              ({ title, percentage }: IComputerSkill, idx: number) => (\n                <ProgressBar\n                  title={title}\n                  width={percentage}\n                  advanced={percentage > 75}\n                  intermediate={percentage <= 75 && percentage > 60}\n                  fundamental={percentage <= 60}\n                  animate={animate}\n                />\n              )\n            )}\n          </div>\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}