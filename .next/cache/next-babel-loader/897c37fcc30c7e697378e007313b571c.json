{"ast":null,"code":"var _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/WorkExperience/WorkExperience.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport useIsInViewport from 'use-is-in-viewport';\nimport { workExperienceList } from '../../data/workExperience';\nimport WorkExperienceItem from '../WorkExperienceItem';\nimport Section from '../Section';\nimport Headline from '../Headline';\n\nconst WorkExperience = () => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(false);\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    }\n  }, [isInViewport]);\n  return __jsx(\"div\", {\n    ref: targetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Headline, {\n    headline: \"Work Experience\",\n    noPadding: true,\n    white: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(Section, {\n    tall: true,\n    white: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, workExperienceList.map(item => __jsx(WorkExperienceItem, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/WorkExperience/WorkExperience.tsx"],"names":["React","useEffect","useState","useIsInViewport","workExperienceList","WorkExperienceItem","Section","Headline","WorkExperience","isInViewport","targetRef","animate","setAnimate","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4BP,eAAe,EAAjD;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAU,KAAV,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,YAAJ,EAAkB;AAChBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACH,YAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,GAAG,EAAEC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,iBAAnB;AAAqC,IAAA,SAAS,MAA9C;AAA+C,IAAA,KAAK,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,kBAAkB,CAACS,GAAnB,CAAwBC,IAAD,IACtB,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CApBD;;AAsBA,eAAeN,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useIsInViewport from 'use-is-in-viewport';\nimport IWorkExperienceItem from '../../typescript/Interfaces/IWorkExperienceItem';\nimport { workExperienceList } from '../../data/workExperience';\nimport WorkExperienceItem from '../WorkExperienceItem';\nimport Section from '../Section';\nimport Headline from '../Headline';\n\nconst WorkExperience = () => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const [animate, setAnimate] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (isInViewport) {\n      setAnimate(true);\n    }\n  }, [isInViewport]);\n\n  return (\n    <div ref={targetRef}>\n      <Headline headline=\"Work Experience\" noPadding white />\n      <Section tall white>\n        {workExperienceList.map((item: IWorkExperienceItem) => (\n          <WorkExperienceItem item={item} />\n        ))}\n      </Section>\n    </div>\n  );\n};\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}