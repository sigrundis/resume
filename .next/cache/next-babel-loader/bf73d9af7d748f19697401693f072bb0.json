{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sigrundish/personal-apps/resume/components/ProgressBar/ProgressBar.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './ProgressBar.module.scss';\nvar container = styles.container,\n    label = styles.label,\n    progressContainer = styles.progressContainer,\n    progress = styles.progress,\n    advancedProgress = styles.advancedProgress,\n    intermediateProgress = styles.intermediateProgress,\n    fundamentalProgress = styles.fundamentalProgress;\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var _classNames;\n\n  var title = _ref.title,\n      finalWidth = _ref.width,\n      advanced = _ref.advanced,\n      intermediate = _ref.intermediate,\n      fundamental = _ref.fundamental;\n\n  var _useIsInViewport = useIsInViewport(),\n      _useIsInViewport2 = _slicedToArray(_useIsInViewport, 2),\n      isInViewport = _useIsInViewport2[0],\n      targetRef = _useIsInViewport2[1];\n\n  var _useState = useState(0),\n      width = _useState[0],\n      setWidth = _useState[1];\n\n  useEffect(function () {\n    if (isInViewport) {\n      setWidth(finalWidth);\n    } else {\n      setWidth(0);\n    }\n  }, [isInViewport]);\n  return __jsx(\"div\", {\n    className: container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    ref: targetRef,\n    className: progressContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classNames(progress, (_classNames = {}, _defineProperty(_classNames, advancedProgress, advanced), _defineProperty(_classNames, intermediateProgress, intermediate), _defineProperty(_classNames, fundamentalProgress, fundamental), _classNames)),\n    style: {\n      width: \"\".concat(isInViewport ? width : 0, \"%\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/sigrundish/personal-apps/resume/components/ProgressBar/ProgressBar.tsx"],"names":["React","useState","useEffect","classNames","useIsInViewport","styles","container","label","progressContainer","progress","advancedProgress","intermediateProgress","fundamentalProgress","ProgressBar","title","finalWidth","width","advanced","intermediate","fundamental","isInViewport","targetRef","setWidth"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;IAGEC,S,GAOED,M,CAPFC,S;IACAC,K,GAMEF,M,CANFE,K;IACAC,iB,GAKEH,M,CALFG,iB;IACAC,Q,GAIEJ,M,CAJFI,Q;IACAC,gB,GAGEL,M,CAHFK,gB;IACAC,oB,GAEEN,M,CAFFM,oB;IACAC,mB,GACEP,M,CADFO,mB;;AAYF,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAMA;AAAA;;AAAA,MALlBC,KAKkB,QALlBA,KAKkB;AAAA,MAJXC,UAIW,QAJlBC,KAIkB;AAAA,MAHlBC,QAGkB,QAHlBA,QAGkB;AAAA,MAFlBC,YAEkB,QAFlBA,YAEkB;AAAA,MADlBC,WACkB,QADlBA,WACkB;;AAAA,yBACgBf,eAAe,EAD/B;AAAA;AAAA,MACXgB,YADW;AAAA,MACGC,SADH;;AAAA,kBAEQpB,QAAQ,CAAC,CAAD,CAFhB;AAAA,MAEXe,KAFW;AAAA,MAEJM,QAFI;;AAIlBpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,YAAJ,EAAkB;AAChBE,MAAAA,QAAQ,CAACP,UAAD,CAAR;AACD,KAFD,MAEO;AACLO,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,GANQ,EAMN,CAACF,YAAD,CANM,CAAT;AAQA,SACE;AAAK,IAAA,SAAS,EAAEd,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBO,KAAxB,CADF,EAEE;AAAK,IAAA,GAAG,EAAEO,SAAV;AAAqB,IAAA,SAAS,EAAEb,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEL,UAAU,CAACM,QAAD,kDAClBC,gBADkB,EACCO,QADD,gCAElBN,oBAFkB,EAEKO,YAFL,gCAGlBN,mBAHkB,EAGIO,WAHJ,gBADvB;AAME,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,YAAKI,YAAY,GAAGJ,KAAH,GAAW,CAA5B;AAAP,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAeD,CAjCD;;AAmCA,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useIsInViewport from 'use-is-in-viewport';\nimport styles from './ProgressBar.module.scss';\n\nconst {\n  container,\n  label,\n  progressContainer,\n  progress,\n  advancedProgress,\n  intermediateProgress,\n  fundamentalProgress,\n} = styles;\ninterface IProgressBar {\n  title: string;\n  width: number;\n  animate?: boolean;\n  animateDelay?: boolean;\n  advanced?: boolean;\n  intermediate?: boolean;\n  fundamental?: boolean;\n}\n\nconst ProgressBar = ({\n  title,\n  width: finalWidth,\n  advanced,\n  intermediate,\n  fundamental,\n}: IProgressBar) => {\n  const [isInViewport, targetRef] = useIsInViewport();\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    if (isInViewport) {\n      setWidth(finalWidth);\n    } else {\n      setWidth(0);\n    }\n  }, [isInViewport]);\n\n  return (\n    <div className={container}>\n      <div className={label}>{title}</div>\n      <div ref={targetRef} className={progressContainer}>\n        <div\n          className={classNames(progress, {\n            [advancedProgress]: advanced,\n            [intermediateProgress]: intermediate,\n            [fundamentalProgress]: fundamental,\n          })}\n          style={{ width: `${isInViewport ? width : 0}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}